name: 🚀 Deploy Portfolio to Netlify

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  NPM_VERSION: '9'

jobs:
  # Quality Assurance
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 TypeScript check
        run: npm run type-check
        
      - name: 🧹 ESLint check
        run: npm run lint
        
      - name: ✅ Build test
        run: npm run build
        
  # Production Build
  build:
    name: 🏗️ Production Build
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🚀 Production build
        run: npm run build:prod
        
      - name: 📊 Build size check
        run: |
          echo "📦 Build completed successfully!"
          echo "📁 Build directory size:"
          du -sh dist/
          echo "📄 Build contents:"
          ls -la dist/
          
      - name: 💾 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 7

  # Deploy to Netlify (Production)
  deploy-production:
    name: 🌐 Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🚀 Production build
        run: npm run build:prod
        
      - name: 🌐 Deploy to Netlify
        id: deploy
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "🚀 Deploy from GitHub Actions - ${{ github.sha }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Deploy Preview (Pull Requests)
  deploy-preview:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🚀 Production build
        run: npm run build:prod
        
      - name: 🌐 Deploy Preview to Netlify
        id: deploy
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "🔍 Preview from PR #${{ github.event.number }}"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Performance Testing
  performance-test:
    name: ⚡ Performance Test
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🚀 Production build
        run: npm run build:prod
        
      - name: 📊 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:4173/
            http://localhost:4173/about
            http://localhost:4173/projects
            http://localhost:4173/contact
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './.lighthouserc.json'
          
      - name: 📈 Performance report
        run: |
          echo "📊 Performance testing completed!"
          echo "🔍 Check the Lighthouse CI artifacts for detailed reports"

  # Security Scan
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Run security audit
        run: npm audit --audit-level=moderate
        
      - name: 📦 Check for vulnerabilities
        run: |
          if npm audit --audit-level=moderate; then
            echo "✅ No security vulnerabilities found"
          else
            echo "⚠️ Security vulnerabilities detected"
            exit 1
          fi

  # Notify on Success
  notify-success:
    name: ✅ Notify Success
    runs-on: ubuntu-latest
    needs: [deploy-production, performance-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 🎉 Deployment successful
        run: |
          echo "🚀 Portfolio deployed successfully!"
          echo "🌐 Production URL: ${{ needs.deploy-production.outputs.url }}"
          echo "📊 Performance tests completed"
          echo "🔒 Security scan passed"
          
      - name: 📧 Send notification (optional)
        run: |
          echo "📧 Send deployment notification here"
          # Add your notification logic (Slack, Discord, email, etc.)

  # Notify on Failure
  notify-failure:
    name: ❌ Notify Failure
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: 🚨 Deployment failed
        run: |
          echo "❌ Deployment failed!"
          echo "🔍 Check the workflow logs for details"
          echo "📧 Send failure notification here"
          # Add your failure notification logic
